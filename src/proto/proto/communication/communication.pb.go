// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/proto/communication.proto

package communication

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	MessageType_BROADCAST    MessageType = 0
	MessageType_JOIN         MessageType = 1
	MessageType_WRITE        MessageType = 2
	MessageType_WRITE_BATCH  MessageType = 3
	MessageType_RECONSTRUCT  MessageType = 4
	MessageType_TEST_HACSS   MessageType = 5
	MessageType_QC           MessageType = 6
	MessageType_QCREP        MessageType = 7
	MessageType_TIMEOUT      MessageType = 8
	MessageType_TQC          MessageType = 9
	MessageType_VIEWCHANGE   MessageType = 10
	MessageType_NEWVIEW      MessageType = 11
	MessageType_REC1         MessageType = 12
	MessageType_ECHO1        MessageType = 13
	MessageType_REC2         MessageType = 14
	MessageType_ECHO2        MessageType = 15
	MessageType_CROSS        MessageType = 16
	MessageType_CROSSREPLY   MessageType = 17
	MessageType_CROSSCONFIRM MessageType = 18
	MessageType_CROSSFETCH   MessageType = 19
	MessageType_CROSSCATCHUP MessageType = 20
)

var MessageType_name = map[int32]string{
	0:  "BROADCAST",
	1:  "JOIN",
	2:  "WRITE",
	3:  "WRITE_BATCH",
	4:  "RECONSTRUCT",
	5:  "TEST_HACSS",
	6:  "QC",
	7:  "QCREP",
	8:  "TIMEOUT",
	9:  "TQC",
	10: "VIEWCHANGE",
	11: "NEWVIEW",
	12: "REC1",
	13: "ECHO1",
	14: "REC2",
	15: "ECHO2",
	16: "CROSS",
	17: "CROSSREPLY",
	18: "CROSSCONFIRM",
	19: "CROSSFETCH",
	20: "CROSSCATCHUP",
}

var MessageType_value = map[string]int32{
	"BROADCAST":    0,
	"JOIN":         1,
	"WRITE":        2,
	"WRITE_BATCH":  3,
	"RECONSTRUCT":  4,
	"TEST_HACSS":   5,
	"QC":           6,
	"QCREP":        7,
	"TIMEOUT":      8,
	"TQC":          9,
	"VIEWCHANGE":   10,
	"NEWVIEW":      11,
	"REC1":         12,
	"ECHO1":        13,
	"REC2":         14,
	"ECHO2":        15,
	"CROSS":        16,
	"CROSSREPLY":   17,
	"CROSSCONFIRM": 18,
	"CROSSFETCH":   19,
	"CROSSCATCHUP": 20,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83b3b5c1aacd3468, []int{0}
}

type RawMessage struct {
	Msg                  []byte   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Result               bool     `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawMessage) Reset()         { *m = RawMessage{} }
func (m *RawMessage) String() string { return proto.CompactTextString(m) }
func (*RawMessage) ProtoMessage()    {}
func (*RawMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_83b3b5c1aacd3468, []int{0}
}

func (m *RawMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawMessage.Unmarshal(m, b)
}
func (m *RawMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawMessage.Marshal(b, m, deterministic)
}
func (m *RawMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawMessage.Merge(m, src)
}
func (m *RawMessage) XXX_Size() int {
	return xxx_messageInfo_RawMessage.Size(m)
}
func (m *RawMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RawMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RawMessage proto.InternalMessageInfo

func (m *RawMessage) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *RawMessage) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

// Request with a request type and payload in bytes
type Request struct {
	Type                 MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=communication.MessageType" json:"type,omitempty"`
	Request              []byte      `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	Version              string      `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_83b3b5c1aacd3468, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_BROADCAST
}

func (m *Request) GetRequest() []byte {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Request) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Response with a request type and payload in bytes (not empty)
type Response struct {
	Type                 MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=communication.MessageType" json:"type,omitempty"`
	Response             []byte      `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	Version              string      `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Signature            []byte      `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_83b3b5c1aacd3468, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_BROADCAST
}

func (m *Response) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Response) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Response) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Empty response
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_83b3b5c1aacd3468, []int{3}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("communication.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*RawMessage)(nil), "communication.RawMessage")
	proto.RegisterType((*Request)(nil), "communication.Request")
	proto.RegisterType((*Response)(nil), "communication.Response")
	proto.RegisterType((*Empty)(nil), "communication.Empty")
}

func init() { proto.RegisterFile("src/proto/communication.proto", fileDescriptor_83b3b5c1aacd3468) }

var fileDescriptor_83b3b5c1aacd3468 = []byte{
	// 650 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0xcd, 0x4e, 0xdb, 0x40,
	0x10, 0xc7, 0xc9, 0x07, 0x71, 0x32, 0xf9, 0x60, 0xd8, 0x50, 0x94, 0x46, 0xad, 0x84, 0x72, 0x42,
	0x3d, 0x80, 0x48, 0xa5, 0x9e, 0xaa, 0xaa, 0xf6, 0xb2, 0xc1, 0xa1, 0x4d, 0x1c, 0xd6, 0x06, 0xd4,
	0x5e, 0x50, 0x9a, 0x2e, 0xc1, 0x52, 0xfc, 0x51, 0xdb, 0xa1, 0xca, 0x4b, 0xf4, 0x21, 0xfa, 0x34,
	0x7d, 0xac, 0x6a, 0x9d, 0x04, 0x0a, 0x2a, 0x54, 0xcd, 0x72, 0xca, 0xce, 0xdf, 0x3b, 0xbf, 0xf9,
	0xef, 0xcc, 0x1c, 0x02, 0x2f, 0xe3, 0x68, 0xb4, 0x1f, 0x46, 0x41, 0x12, 0xec, 0x8f, 0x02, 0xcf,
	0x9b, 0xfa, 0xee, 0x68, 0x98, 0xb8, 0x81, 0xbf, 0x97, 0x6a, 0xa4, 0x7a, 0x47, 0x6c, 0xbd, 0x01,
	0xe0, 0xc3, 0xef, 0x3d, 0x11, 0xc7, 0xc3, 0xb1, 0x20, 0x08, 0x39, 0x2f, 0x1e, 0x37, 0x32, 0x3b,
	0x99, 0xdd, 0x0a, 0x97, 0x47, 0xb2, 0x0d, 0x85, 0x48, 0xc4, 0xd3, 0x49, 0xd2, 0xc8, 0xee, 0x64,
	0x76, 0x8b, 0x7c, 0x11, 0xb5, 0x3c, 0xd0, 0xb8, 0xf8, 0x36, 0x15, 0x71, 0x42, 0xf6, 0x20, 0x9f,
	0xcc, 0x42, 0x91, 0x66, 0xd5, 0xda, 0xcd, 0xbd, 0xbb, 0x55, 0x17, 0x68, 0x67, 0x16, 0x0a, 0x9e,
	0xde, 0x23, 0x0d, 0xd0, 0xa2, 0x79, 0x6a, 0xca, 0xac, 0xf0, 0x65, 0x28, 0xbf, 0x5c, 0x8b, 0x28,
	0x76, 0x03, 0xbf, 0x91, 0xdb, 0xc9, 0xec, 0x96, 0xf8, 0x32, 0x6c, 0xfd, 0xc8, 0x40, 0x91, 0x8b,
	0x38, 0x0c, 0xfc, 0x58, 0xfc, 0x77, 0xc1, 0x26, 0x14, 0xa3, 0x45, 0xee, 0xa2, 0xe2, 0x4d, 0xfc,
	0x70, 0x49, 0xf2, 0x02, 0x4a, 0xb1, 0x3b, 0xf6, 0x87, 0xc9, 0x34, 0x12, 0x8d, 0x7c, 0x9a, 0x76,
	0x2b, 0xb4, 0x34, 0x58, 0x67, 0x5e, 0x98, 0xcc, 0x5e, 0xfd, 0xcc, 0x42, 0xf9, 0x8f, 0x92, 0xa4,
	0x0a, 0x25, 0x83, 0x5b, 0xfa, 0x21, 0xd5, 0x6d, 0x07, 0xd7, 0x48, 0x11, 0xf2, 0xc7, 0x56, 0xb7,
	0x8f, 0x19, 0x52, 0x82, 0xf5, 0x73, 0xde, 0x75, 0x18, 0x66, 0xc9, 0x06, 0x94, 0xd3, 0xe3, 0x85,
	0xa1, 0x3b, 0xd4, 0xc4, 0x9c, 0x14, 0x38, 0xa3, 0x56, 0xdf, 0x76, 0xf8, 0x29, 0x75, 0x30, 0x4f,
	0x6a, 0x00, 0x0e, 0xb3, 0x9d, 0x0b, 0x53, 0xa7, 0xb6, 0x8d, 0xeb, 0xa4, 0x00, 0xd9, 0x13, 0x8a,
	0x05, 0x09, 0x39, 0xa1, 0x9c, 0x0d, 0x50, 0x23, 0x65, 0xd0, 0x9c, 0x6e, 0x8f, 0x59, 0xa7, 0x0e,
	0x16, 0x89, 0x06, 0x39, 0xe7, 0x84, 0x62, 0x49, 0x26, 0x9e, 0x75, 0xd9, 0x39, 0x35, 0xf5, 0xfe,
	0x11, 0x43, 0x90, 0xb7, 0xfa, 0xec, 0x5c, 0x4a, 0x58, 0x96, 0x66, 0x38, 0xa3, 0x07, 0x58, 0x91,
	0x1c, 0x46, 0x4d, 0xeb, 0x00, 0xab, 0x0b, 0xb1, 0x8d, 0xb5, 0xa5, 0xd8, 0xc6, 0x0d, 0x79, 0xa4,
	0xdc, 0xb2, 0x6d, 0x44, 0x49, 0x4c, 0x8f, 0x9c, 0x0d, 0x3e, 0x7e, 0xc2, 0x4d, 0x82, 0x50, 0x49,
	0x63, 0x6a, 0xf5, 0x3b, 0x5d, 0xde, 0x43, 0x72, 0x73, 0xa3, 0xc3, 0xe4, 0x6b, 0xea, 0xb7, 0x37,
	0xe4, 0xeb, 0x4e, 0x07, 0xb8, 0xd5, 0xfe, 0x55, 0x81, 0xbc, 0x2d, 0xfc, 0xaf, 0xe4, 0x2d, 0x68,
	0xf2, 0xb7, 0x17, 0x8f, 0xc9, 0xf3, 0x7b, 0x73, 0xbb, 0x5d, 0xc3, 0xe6, 0xd6, 0xbd, 0x4f, 0x69,
	0xa7, 0x5b, 0x6b, 0xc4, 0x80, 0xb2, 0xcc, 0x5e, 0x2e, 0xde, 0xf6, 0x7d, 0xc2, 0x5c, 0x6f, 0x3e,
	0x4c, 0x6e, 0xad, 0x91, 0xf7, 0x50, 0x93, 0x0c, 0xdb, 0x1d, 0xff, 0x0b, 0xf3, 0xb0, 0x0b, 0x9c,
	0xbb, 0x08, 0x27, 0xb3, 0x55, 0x19, 0x87, 0x40, 0x24, 0x83, 0x06, 0xfe, 0xa5, 0x1b, 0x79, 0x8a,
	0x4e, 0x3a, 0x22, 0x19, 0x5d, 0xa9, 0x3a, 0x19, 0x26, 0xa3, 0xab, 0x69, 0xb8, 0x2a, 0xe5, 0x1d,
	0xe4, 0x8f, 0x03, 0xd7, 0x7f, 0x6c, 0xa8, 0x8f, 0x4e, 0x85, 0x42, 0x8d, 0x1b, 0x54, 0x1a, 0x31,
	0x66, 0x89, 0x58, 0x71, 0x3d, 0x28, 0xd4, 0x74, 0x43, 0x57, 0x87, 0x0c, 0x78, 0x47, 0x11, 0xc2,
	0x00, 0x19, 0x7d, 0x92, 0x07, 0x51, 0x65, 0x88, 0xf4, 0x72, 0xa6, 0x8e, 0x39, 0x84, 0x8d, 0xde,
	0xd9, 0x53, 0x74, 0xb7, 0xa7, 0x0c, 0x31, 0xa1, 0xce, 0x45, 0x12, 0xb9, 0xe2, 0x5a, 0x28, 0x92,
	0x3a, 0xb0, 0x69, 0xbb, 0x5e, 0x38, 0x11, 0xea, 0xcd, 0x61, 0xa3, 0xab, 0x40, 0x91, 0x62, 0x40,
	0xf5, 0x48, 0x75, 0x4c, 0x1f, 0x60, 0x7b, 0xfe, 0xa2, 0x41, 0x14, 0x04, 0x97, 0xea, 0x8d, 0x1e,
	0x4c, 0x86, 0xae, 0xaf, 0xbe, 0x3d, 0x26, 0xd4, 0xcd, 0x20, 0xb1, 0x93, 0xe9, 0xa5, 0xa2, 0x27,
	0xe3, 0xd9, 0xe7, 0xfa, 0x5f, 0xfe, 0xdc, 0x7c, 0x29, 0xa4, 0xe2, 0xeb, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x90, 0xf1, 0xb1, 0x6a, 0xfe, 0x08, 0x00, 0x00,
}
